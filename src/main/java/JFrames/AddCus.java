/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package JFrames;

import Classes.Customer;
import static Classes.Customer.readCusFile;
import java.awt.Color;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.border.LineBorder;
import javax.swing.plaf.basic.BasicInternalFrameUI;

/**
 *
 * @author user
 */
public class AddCus extends javax.swing.JInternalFrame {

    /**
     * Creates new form AddCus
     */
    public AddCus() {
        initComponents();
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 00));
        BasicInternalFrameUI ui = (BasicInternalFrameUI) this.getUI();
        ui.setNorthPane(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        numInput = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        emailInput = new javax.swing.JTextField();
        nameInput = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        ICInput = new javax.swing.JTextField();
        jTextField1 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        passportInput = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        jLabel5.setFont(new java.awt.Font("Tw Cen MT", 0, 18)); // NOI18N
        jLabel5.setText("Contact Number:");

        numInput.setFont(new java.awt.Font("Tw Cen MT", 0, 18)); // NOI18N

        jLabel7.setFont(new java.awt.Font("Tw Cen MT", 0, 18)); // NOI18N
        jLabel7.setText("Email:");

        jLabel1.setFont(new java.awt.Font("Tw Cen MT", 0, 18)); // NOI18N
        jLabel1.setText("Customer ID:");

        jLabel4.setFont(new java.awt.Font("Tw Cen MT", 0, 18)); // NOI18N
        jLabel4.setText("Customer Name:");

        emailInput.setFont(new java.awt.Font("Tw Cen MT", 0, 18)); // NOI18N
        emailInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailInputActionPerformed(evt);
            }
        });

        nameInput.setFont(new java.awt.Font("Tw Cen MT", 0, 18)); // NOI18N

        jLabel6.setFont(new java.awt.Font("Tw Cen MT", 0, 18)); // NOI18N
        jLabel6.setText("IC (Malaysian):");

        ICInput.setFont(new java.awt.Font("Tw Cen MT", 0, 18)); // NOI18N

        jTextField1.setFont(new java.awt.Font("Tw Cen MT", 0, 18)); // NOI18N
        jTextField1.setEnabled(false);
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tw Cen MT", 0, 18)); // NOI18N
        jLabel8.setText("<html>Passport :<br>(Non-Malaysian) <html>");

        passportInput.setFont(new java.awt.Font("Tw Cen MT", 0, 18)); // NOI18N
        passportInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passportInputActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel7))
                        .addGap(14, 14, 14)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(numInput, javax.swing.GroupLayout.DEFAULT_SIZE, 139, Short.MAX_VALUE)
                            .addComponent(emailInput)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel1)
                            .addComponent(jLabel6)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(passportInput, javax.swing.GroupLayout.DEFAULT_SIZE, 127, Short.MAX_VALUE)
                            .addComponent(jTextField1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(nameInput, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(ICInput, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addGap(16, 16, 16))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(nameInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(ICInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(passportInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(numInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(emailInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23))
        );

        jButton1.setFont(new java.awt.Font("Tw Cen MT", 0, 18)); // NOI18N
        jButton1.setText("Add");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tw Cen MT", 1, 24)); // NOI18N
        jLabel2.setText("Add New Customer Record");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(133, 133, 133)
                        .addComponent(jButton1)))
                .addContainerGap(33, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(33, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        //initialize variables
        boolean isEmpty = false;
        String cusName, IC, num, email, passport;

        //check for empty inputs
        ArrayList<JTextField> inputs = new ArrayList<>();
        inputs.add(nameInput);
        inputs.add(numInput);
        inputs.add(emailInput);

        for (JTextField element : inputs) {
            element.setBorder(new LineBorder(null));
            if (element.getText().isEmpty()) {
                element.setBorder(new LineBorder(Color.decode("#FE876D")));
                isEmpty = true;
            }
        }
        //reset border color
        ICInput.setBorder(new LineBorder(null));
        passportInput.setBorder(new LineBorder(null));

        //check if either one of IC or Passport is entered
        if ((ICInput.getText().isEmpty()) && (passportInput.getText().isEmpty())) {
            ICInput.setBorder(new LineBorder(Color.decode("#FE876D")));
            passportInput.setBorder(new LineBorder(Color.decode("#FE876D")));
            isEmpty = true;
        }
        //show mising input message
        if (isEmpty) {
            JOptionPane.showMessageDialog(null, "--Please fill in all fields-- (For IC and Passport, only either one is needed.)");
            //stop execution and wait for user input
            return;
        }

        //validate that only IC OR Passport is filled, not both.
        if ((!ICInput.getText().isEmpty()) && (!passportInput.getText().isEmpty())) {
            ICInput.setBorder(new LineBorder(Color.decode("#FE876D")));
            passportInput.setBorder(new LineBorder(Color.decode("#FE876D")));
            JOptionPane.showMessageDialog(null, "--Only need to fill up either IC or Passport, NOT BOTH.");
            return;
        }

        //get input from textfield
        cusName = nameInput.getText();
        IC = ICInput.getText();
        passport = passportInput.getText();
        num = numInput.getText();
        email = emailInput.getText();

        //CHECK FOR MATCHING RECORDS
        ArrayList<Customer> cusRec = readCusFile();
        String searchkey;
        for (Customer rec : cusRec) {
            if (!ICInput.getText().isEmpty()) {
                searchkey = IC;
            } else {
                searchkey = passport;
            }
            if (rec.getICpassport().equals(searchkey)){
                JOptionPane.showMessageDialog(null,"Existing record exists, pease check IC/Passport!");
                ICInput.setBorder(new LineBorder(Color.decode("#FE876D")));
                passportInput.setBorder(new LineBorder(Color.decode("#FE876D")));
                return;
            }
        }
        
        //validate input format
        boolean error = false;

        //validate name input
        String pattern = "^[a-zA-Z ]+$";

        String errorMssg = "";
        if (!cusName.matches(pattern)) {
            errorMssg += "--Invalid Customer Name. Only alphabets allowed.\n";
            error = true;
            nameInput.setBorder(new LineBorder(Color.decode("#FE876D")));
        }

        //validate IC input
        //check if only numbers
        if (!ICInput.getText().isEmpty()) {
            if (IC.matches("\\d+")) {
                int ICLength = 12;
                //check if length is 12 numbers
                if (IC.length() != ICLength) {
                    errorMssg += "--Invalid IC number, IC number must be 12 numbers without hyphens(-).\n";
                    error = true;
                    ICInput.setBorder(new LineBorder(Color.decode("#FE876D")));
                }
            } else {
                errorMssg += "--Invalid IC number. Only numbers allowed.\n";
                error = true;
                ICInput.setBorder(new LineBorder(Color.decode("#FE876D")));
            }
        }

        //validate phone number input
        if (!num.matches("\\d+")) {
            errorMssg += "--Invalid phone number, phone number can only consist of numbers, without hyphens(-) or plus(+).\n";
            error = true;
            numInput.setBorder(new LineBorder(Color.decode("#FE876D")));
        }

        //validate email input
        String emailPattern = "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$";
        if (!email.matches(emailPattern)) {
            errorMssg += "--Invalid email address, please enter email with correct format.\n";
            error = true;
            emailInput.setBorder(new LineBorder(Color.decode("#FE876D")));
        }

        //pop up error message if invalid input
        if (error) {
            JOptionPane.showMessageDialog(null, errorMssg);
            return;
        }
        
        // add the inputs to an array
        String[] dataArray = new String[4];
        dataArray[0] = cusName;
        //add IC or Passport
        if (!ICInput.getText().isEmpty()) {
            dataArray[1] = IC;
        } else {
            dataArray[1] = passport;
        }
        dataArray[2] = num;
        dataArray[3] = email;

        //write new cus rec to file
        boolean addSuccess = Customer.addNewCus(dataArray);
        if (addSuccess) {
            JOptionPane.showMessageDialog(null, "New customer record successfully saved to database.");
        } else {
            JOptionPane.showMessageDialog(null, "Unable to save changes, changes discarded! Please contact the developer.");
        }
        for (JTextField element : inputs) {
            element.setText("");
        }
        ICInput.setText("");
        passportInput.setText("");

    }//GEN-LAST:event_jButton1ActionPerformed

    private void passportInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passportInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_passportInputActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void emailInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_emailInputActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField ICInput;
    private javax.swing.JTextField emailInput;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField nameInput;
    private javax.swing.JTextField numInput;
    private javax.swing.JTextField passportInput;
    // End of variables declaration//GEN-END:variables

    private Color Color(int i, int i0, int i1) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
}
